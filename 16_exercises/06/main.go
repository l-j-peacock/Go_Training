package main

import "fmt"

/*
https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

func main() {
	fmt.Println(sumOfSliceValues(fibonacci()...))
}

func fibonacci() []int {
	var sliceOfEvenNums []int
	var sumOfPreviousTwoNums int
	a := 1
	b := 2
	limit := 4000000
	sliceOfEvenNums = append(sliceOfEvenNums, b)
	for {
		if a > limit || b > limit {
			break
		}

		sumOfPreviousTwoNums = a + b

		if a < b {
			a = sumOfPreviousTwoNums
		} else {
			b = sumOfPreviousTwoNums
		}

		if sumOfPreviousTwoNums%2 == 0 {
			sliceOfEvenNums = append(sliceOfEvenNums, sumOfPreviousTwoNums)
		}
	}
	return sliceOfEvenNums
}

func sumOfSliceValues(x ...int) int {
	var total int
	for _, v := range x {
		total += v
	}
	return total
}